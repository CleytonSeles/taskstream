// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relacionamentos
  ownedTasks    Task[] @relation("TaskOwner")
  assignedTasks Task[] @relation("TaskAssignee")

  @@map("users")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  status      String    @default("pending") // pending, in_progress, completed
  priority    String    @default("medium") // low, medium, high
  category    String    @default("general")
  dueDate     DateTime? @map("due_date")
  completedAt DateTime? @map("completed_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  // Relacionamentos
  userId       Int  @map("user_id")
  assignedToId Int? @map("assigned_to_id")

  owner      User  @relation("TaskOwner", fields: [userId], references: [id], onDelete: Cascade)
  assignedTo User? @relation("TaskAssignee", fields: [assignedToId], references: [id], onDelete: SetNull)

  @@map("tasks")
}

// √çndices para performance
// @@index([userId])
// @@index([status])
// @@index([priority])
// @@index([dueDate])
